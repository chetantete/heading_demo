c
data.class == Hash
data.class
data
    data = YAML.load data
data.class
data
c
input
n
c
input.first
input
    input = params[:json_input].split("\n")
params[:json_input].split("\n")
params[:json_input]
c
view
c
    end
    view +=  "<h#{input['heading_level']+1}> #{input['title']} </h#{input['heading_level']+1}></br>"
    if input.keys.include? "title" && "heading_level"
    view = ""
    input = YAML.load input
    input = params[:json_input]
paramas
view
c
view
c
YAML.load input
input = params[:json_input][:json_input]
input = YAML.load input
input = params[:json_input][:json_input]
c
view
c
    view +=  "<h#{input['heading_level']+1}> #{input['title']} </h#{input['heading_level']+1}></br>"
    view +=  "<h#{input['heading_level']}> #{input['title']} </h#{input['heading_level']}></br>"
    view = ""
input["title"]
input[:title]
input
input.keys.include? "title" && "heading_level"
input.keys.include? "title" && "heading_level" && "as"
input.keys.include? "title" && "heading_level"
input.keys.include? "title"
input.keys
    input = YAML.load input
    input = yaml.load input
    input = params[:json_input][:json_input]
a
YAML.load a
a.gsub!('"', '')
a.str.gsub!('"', '')
a.strip
JSON.parse a
a.class
a
a.to_h
a = a.strip
a
JSON.parse(a.strip)
a.strip
a
a.to_s
a.to_h
a
JSON.parse(a)
a = params[:json_input][:json_input]
params
params[:json_input][:json_input].to_json
params[:json_input][:json_input].to_json.first
params[:json_input][:json_input].to_json
params[:json_input][:json_input].flatten
params[:json_input][:json_input].flattern
params[:json_input][:json_input]
params[:json_input][:json_input].to_a
params[:json_input][:json_input].first
params[:json_input][:json_input]
JSON.parse(params[:json_input][:json_input])
params[:json_input][:json_input]
params[:json_input]
params
params[:json_input]
params[:json_input].to_json
params[:json_input]
params
c
params
c
